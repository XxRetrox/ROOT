{"ast":null,"code":"var _jsxFileName = \"/home/jasonreacher47/ROOT/src/components/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport notes from \"../notes\";\nimport Note from \"./note\";\nimport InputField from \"./input\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body(props) {\n  _s();\n  var [inputText, setInputText] = useState({\n    user_id: props.uId,\n    title: \"\",\n    content: \"\"\n  });\n  var [errorText, setError] = useState(\"\");\n  function handle(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputText(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  }\n  const loadNotes = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/keeper/${props.uId}`);\n      const noteData = response.data.notes;\n      console.log(noteData);\n      props.sC(() => {\n        return [...noteData];\n      });\n      console.log(props.nC);\n    } catch (error) {\n      console.error(\"Unable to get user notes:\", error);\n    }\n  }, [props.uId, props.sC]);\n  useEffect(() => {\n    loadNotes();\n  }, [loadNotes]);\n  async function post() {\n    console.log(inputText.user_id, inputText.content);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/postnote\", {\n        user_id: inputText.user_id,\n        title: inputText.title,\n        content: inputText.content\n      });\n      const resData = response.data;\n      props.sC(prevValue => {\n        return [...prevValue, {\n          title: resData.title,\n          content: resData.content,\n          created_at: resData.created_at,\n          note_id: resData.note_id\n        }];\n      });\n      setInputText(prevValue => {\n        return {\n          ...prevValue,\n          title: \"\",\n          content: \"\"\n        };\n      });\n    } catch (error) {\n      if (error.response.status === 404) {\n        setError(`${error.response.data.message}`);\n      }\n      console.error(\"The post was unsuccessful:\", error);\n    }\n  }\n  async function deleteNote(id, noteId) {\n    props.sC(prevValue => {\n      return prevValue.filter((note, index) => {\n        return index !== id;\n      });\n    });\n    try {\n      console.log(noteId);\n      const response = await axios.delete(`http://localhost:5000/api/keeper/${noteId}`);\n    } catch (error) {\n      console.error(\"Delete failed:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blur\",\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      tValue: inputText.title,\n      teValue: inputText.content,\n      onPost: post,\n      onInput: handle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arr-notes\",\n      children: props.nC.map((not, index) => {\n        return /*#__PURE__*/_jsxDEV(Note, {\n          sN: props.shNote,\n          id: index,\n          noteId: not.note_id,\n          title: not.title,\n          contents: not.content,\n          created_at: not.created_at,\n          onDelete: deleteNote\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"6XKrHgAVDt524JCglF6057o0r38=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","notes","Note","InputField","axios","jsxDEV","_jsxDEV","Body","props","_s","inputText","setInputText","user_id","uId","title","content","errorText","setError","handle","event","name","value","target","prevValue","loadNotes","useCallback","response","get","noteData","data","console","log","sC","nC","error","post","resData","created_at","note_id","status","message","deleteNote","id","noteId","filter","note","index","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tValue","teValue","onPost","onInput","map","not","sN","shNote","contents","onDelete","_c","$RefreshReg$"],"sources":["/home/jasonreacher47/ROOT/src/components/body.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport notes from \"../notes\";\nimport Note from \"./note\";\nimport InputField from \"./input\";\nimport axios from \"axios\";\n\nfunction Body(props) {\n  var [inputText, setInputText] = useState({\n    user_id: props.uId,\n    title: \"\",\n    content: \"\",\n  });\n  var [errorText, setError] = useState(\"\");\n\n  function handle(event) {\n    const { name, value } = event.target;\n    setInputText((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  const loadNotes = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `http://localhost:5000/api/keeper/${props.uId}`\n      );\n      const noteData = response.data.notes;\n      console.log(noteData);\n      props.sC(() => {\n        return [...noteData];\n      });\n      console.log(props.nC);\n    } catch (error) {\n      console.error(\"Unable to get user notes:\", error);\n    }\n  }, [props.uId, props.sC]);\n\n  useEffect(() => {\n    loadNotes();\n  }, [loadNotes]);\n\n  async function post() {\n    console.log(inputText.user_id, inputText.content);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/postnote\", {\n        user_id: inputText.user_id,\n        title: inputText.title,\n        content: inputText.content,\n      });\n      const resData = response.data;\n      props.sC((prevValue) => {\n        return [\n          ...prevValue,\n          {\n            title: resData.title,\n            content: resData.content,\n            created_at: resData.created_at,\n            note_id: resData.note_id,\n          },\n        ];\n      });\n      setInputText((prevValue) => {\n        return {\n          ...prevValue,\n          title: \"\",\n          content: \"\",\n        };\n      });\n    } catch (error) {\n      if (error.response.status === 404) {\n        setError(`${error.response.data.message}`);\n      }\n      console.error(\"The post was unsuccessful:\", error);\n    }\n  }\n\n  async function deleteNote(id, noteId) {\n    props.sC((prevValue) => {\n      return prevValue.filter((note, index) => {\n        return index !== id;\n      });\n    });\n\n    try {\n      console.log(noteId);\n      const response = await axios.delete(\n        `http://localhost:5000/api/keeper/${noteId}`\n      );\n    } catch (error) {\n      console.error(\"Delete failed:\", error);\n    }\n  }\n\n  return (\n    <div id=\"blur\" className=\"body\">\n      <span>{errorText}</span>\n      <InputField\n        tValue={inputText.title}\n        teValue={inputText.content}\n        onPost={post}\n        onInput={handle}\n      ></InputField>\n      <div className=\"arr-notes\">\n        {props.nC.map((not, index) => {\n          return (\n            <Note\n              sN={props.shNote}\n              key={index}\n              id={index}\n              noteId={not.note_id}\n              title={not.title}\n              contents={not.content}\n              created_at={not.created_at}\n              onDelete={deleteNote}\n            ></Note>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}