{"ast":null,"code":"var _jsxFileName = \"/home/jasonreacher47/ROOT/src/components/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport notes from \"../notes\";\nimport Note from \"./note\";\nimport InputField from \"./input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body(props) {\n  _s();\n  var [inputText, setInputText] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  function handle(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputText(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  }\n  function post() {\n    if (inputText.content.trim() !== \"\" && inputText.title.trim() !== \"\") {\n      props.sC(prevValue => {\n        return [...prevValue, inputText];\n      });\n      setInputText(() => {\n        return {\n          title: \"\",\n          content: \"\"\n        };\n      });\n    } else if (inputText.title.trim() === \"\" && inputText.content.trim() !== \"\") {\n      inputText.title = \"No Title\";\n      setInputText(prevValue => {\n        return {\n          ...prevValue\n        };\n      });\n      props.sC(prevValue => {\n        return [...prevValue, inputText];\n      });\n      setInputText(() => {\n        return {\n          title: \"\",\n          content: \"\"\n        };\n      });\n    }\n  }\n  function deleteNote(id) {\n    props.sC(prevValue => {\n      return prevValue.filter((note, index) => {\n        return index !== id;\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blur\",\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      tValue: inputText.title,\n      teValue: inputText.content,\n      onPost: post,\n      onInput: handle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arr-notes\",\n      children: props.nC.map((not, index) => {\n        return /*#__PURE__*/_jsxDEV(Note, {\n          sN: props.shNote,\n          id: index,\n          title: not.title,\n          contents: not.content,\n          onDelete: deleteNote\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"y2LrsyRMLJMiBoR7/xV3cl2bm1w=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","notes","Note","InputField","jsxDEV","_jsxDEV","Body","props","_s","inputText","setInputText","title","content","handle","event","name","value","target","prevValue","post","trim","sC","deleteNote","id","filter","note","index","className","children","tValue","teValue","onPost","onInput","fileName","_jsxFileName","lineNumber","columnNumber","nC","map","not","sN","shNote","contents","onDelete","_c","$RefreshReg$"],"sources":["/home/jasonreacher47/ROOT/src/components/body.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport notes from \"../notes\";\nimport Note from \"./note\";\nimport InputField from \"./input\";\n\nfunction Body(props) {\n  var [inputText, setInputText] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  function handle(event) {\n    const { name, value } = event.target;\n    setInputText((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  function post() {\n    if (inputText.content.trim() !== \"\" && inputText.title.trim() !== \"\") {\n      props.sC((prevValue) => {\n        return [...prevValue, inputText];\n      });\n      setInputText(() => {\n        return {\n          title: \"\",\n          content: \"\",\n        };\n      });\n    } else if (\n      inputText.title.trim() === \"\" &&\n      inputText.content.trim() !== \"\"\n    ) {\n      inputText.title = \"No Title\";\n      setInputText((prevValue) => {\n        return {\n          ...prevValue,\n        };\n      });\n      props.sC((prevValue) => {\n        return [...prevValue, inputText];\n      });\n      setInputText(() => {\n        return {\n          title: \"\",\n          content: \"\",\n        };\n      });\n    }\n  }\n\n  function deleteNote(id) {\n    props.sC((prevValue) => {\n      return prevValue.filter((note, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div id=\"blur\" className=\"body\">\n      <InputField\n        tValue={inputText.title}\n        teValue={inputText.content}\n        onPost={post}\n        onInput={handle}\n      ></InputField>\n      <div className=\"arr-notes\">\n        {props.nC.map((not, index) => {\n          return (\n            <Note\n              sN={props.shNote}\n              key={index}\n              id={index}\n              title={not.title}\n              contents={not.content}\n              onDelete={deleteNote}\n            ></Note>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}